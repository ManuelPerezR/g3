{"version":3,"sources":["Note.js","App.js","index.js"],"names":["Note","n","deleteNote","confirmEdit","editNote","useState","title","text","state","editingNote","setEditingNote","useEffect","p","className","onChange","e","target","value","type","placeholder","disabled","onClick","_","_id","style","display","App","newNote","setNewNote","notes","setNotes","axios","get","then","res","data","id","setter","put","map","newList","forEach","push","delete","formOn","setFormOn","onSubmit","preventDefault","post","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76288ea0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nconst Note = ({ n, deleteNote, confirmEdit, editNote }) =>{\r\n\r\n    const [editingNote, setEditingNote] = useState({title:'', text:'', state:false})\r\n    useEffect(() => {\r\n        setEditingNote(p => ({...p, text:n.text, title:n.title}))\r\n    }, [n])\r\n\r\n    return(\r\n        <div className='note'>\r\n\r\n        <input \r\n        className={`${editingNote.state ? 'input-note-on' : 'input-note-off'}`}\r\n        onChange={e => setEditingNote(p => ({...p, title:e.target.value}))} \r\n        value={editingNote.title} type='text' placeholder='Titulo'\r\n        disabled={!editingNote.state}\r\n        ></input>\r\n\r\n        <input \r\n        className={`${editingNote.state ? 'input-note-on' : 'input-note-off'}`}\r\n        onChange={e => setEditingNote(p => ({...p, text:e.target.value}))} \r\n        value={editingNote.text} type='text' placeholder='Texto'\r\n        disabled={!editingNote.state}\r\n        ></input>\r\n        <div >\r\n          <button onClick={_ => deleteNote(n._id)}\r\n                    >Eliminar Nota</button>\r\n          <button  \r\n          onClick={_ => setEditingNote(p => ({...p, state:true})) }\r\n          style={{display:editingNote.state ? 'none' : ''}}>Editar Nota</button>\r\n          <button onClick={_ => confirmEdit(n._id, { title:editingNote.title, text:editingNote.text }, setEditingNote)} \r\n            style={{display:editingNote.state ? '' : 'none'}} >Confirmar</button>\r\n          <button onClick={_ => setEditingNote(p => ({...p, state:false})) } \r\n            style={{display:editingNote.state ? '' : 'none'}} >Cancelar</button>\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './Note'\nfunction App() {\n  const [newNote, setNewNote] = useState({title:'', text:''})\n  const [editingNote, setEditingNote] = useState({title:'', text:'', state:false})\n  const [notes, setNotes] = useState([])\n    useEffect(() => {\n      axios.get('/api/notes')\n      .then(res => setNotes(res.data))\n    }, [])\n\n  const createNote = e =>{\n    e.preventDefault()\n    axios.post('/api/notes', { title:newNote.title, text:newNote.text })\n    .then(res => setNotes(p => [res.data, ...p]))\n    setNewNote(p => ({title:'', text:''}))\n  }\n\n  const editNote = (title, text) =>{\n    setEditingNote(p =>( {...p, title:title, text:text, state:true}))\n  }\n  const confirmEdit = ( id, newNote, setter ) =>{\n    axios.put(`/api/notes/${id}`, newNote)\n    setNotes(notes.map(n =>(n._id === id ? newNote : n)))\n    setter(p => ({...p, state:false}))\n  }\n  const deleteNote = id =>{\n    const newList = []\n    notes.forEach(n => n._id !== id ? newList.push(n) : null)\n    axios.delete(`/api/notes/${id}`)\n    .then(res => setNotes(newList))\n  }\n  const [formOn, setFormOn] = useState(false)\n  return (\n    <div className='main'>\n      \n      <button onClick={_ => setFormOn(p => !p)} className='main-btn'>\n      {formOn ? 'Cancelar' : 'Crear Nota'}\n      </button>\n\n      <form className={`${formOn ? 'noteFormOn' : 'noteFormOff'}`} onSubmit={createNote}>\n        <input onChange={e => setNewNote(p => ({...p, title:e.target.value}))} value={newNote.title} type='text' placeholder='Titulo'></input>\n        <input onChange={e => setNewNote(p => ({...p, text:e.target.value}))} value={newNote.text} type='text' placeholder='Texto'></input>\n        <button type='submit'>Crear Nota</button>\n      </form>\n\n      <div className='notesSection'>\n      {notes.map(n =>(\n          <Note n={n} editNote={editNote} confirmEdit={confirmEdit} deleteNote={deleteNote} />\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}